{"version":3,"sources":["components/Footer.tsx","components/NavBar.tsx","pages/About.tsx","store/subject-context.tsx","components/ProjectCard.tsx","pages/Projects/ProjectsList.tsx","pages/Projects/Projects.tsx","pages/Skills.tsx","pages/Welcome.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Footer","fullYear","Date","getFullYear","Navbar","fixed","bg","variant","Col","lg","className","NavBar","Container","Brand","href","Nav","Link","About","ProjectContext","React","createContext","undefined","displayName","ProjectContextProvider","props","useState","isLoading","setIsLoading","allProjects","setAllProjects","fetchProjects","a","axios","get","then","res","data","Provider","value","children","ProjectCard","name","description","clone_url","language","image","Card","style","width","height","paddingTop","color","Header","Title","Body","Text","Badge","ProjectList","context","useContext","Error","useProjects","refresh","setRefresh","useEffect","Spinner","animation","role","length","map","proj","id","Projects","Skills","Welcome","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6cdcb647.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Col, Navbar } from \"react-bootstrap\";\r\n\r\nconst Footer = () => {\r\n  let fullYear = new Date().getFullYear();\r\n  return (\r\n    <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\">\r\n      <Col lg={12} className=\"text-center text-muted\">\r\n        <div>\r\n          {fullYear} - {fullYear + 1} All Rights Reserved by Aleksandar Jovanov\r\n        </div>\r\n      </Col>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { render } from \"@testing-library/react\";\r\nimport React from \"react\";\r\nimport { Container, Navbar, Nav } from \"react-bootstrap\";\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <>\r\n      <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Container>\r\n          <Navbar.Brand href=\"/HXDev\">HXDev</Navbar.Brand>\r\n          <Nav className=\"me-auto\">\r\n            <Nav.Link href=\"#/projects\">Projects</Nav.Link>\r\n            <Nav.Link href=\"#/skills\">Skills</Nav.Link>\r\n            <Nav.Link href=\"#/about\">About</Nav.Link>\r\n          </Nav>\r\n        </Container>\r\n      </Navbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\n\r\nconst About = () => {\r\n  return <div>About me</div>;\r\n};\r\n\r\nexport default About;\r\n","import React, { useContext, useState } from \"react\";\r\nimport ProjectModel from \"../models/project\";\r\nimport axios from \"axios\";\r\nconst ProjectContext = React.createContext<\r\n  | {\r\n      allProjects: ProjectModel[];\r\n      isLoading: boolean;\r\n      fetchProjects: () => {};\r\n    }\r\n  | undefined\r\n>(undefined);\r\n\r\n//Shows context name in DevTools\r\nProjectContext.displayName = \"ProjectContext\";\r\n\r\nexport const ProjectContextProvider = (props: any) => {\r\n  const [isLoading, setIsLoading] = useState(false as boolean);\r\n  const [allProjects, setAllProjects] = useState([] as ProjectModel[]);\r\n\r\n  const fetchProjects = async () => {\r\n    setIsLoading(true);\r\n    await axios\r\n      .get(`https://api.github.com/users/ajaksmaniac/repos`)\r\n      .then((res) => {\r\n        // wait(2000)\r\n        setAllProjects(res.data);\r\n        setIsLoading(false);\r\n\r\n        return res.data;\r\n      });\r\n  };\r\n\r\n  function wait(ms: number) {\r\n    var start = new Date().getTime();\r\n    var end = start;\r\n    while (end < start + ms) {\r\n      end = new Date().getTime();\r\n    }\r\n  }\r\n  return (\r\n    <ProjectContext.Provider value={{ allProjects, isLoading, fetchProjects }}>\r\n      {props.children}\r\n    </ProjectContext.Provider>\r\n  );\r\n};\r\nexport default ProjectContext;\r\n\r\nexport function useProjects() {\r\n  const context = useContext(ProjectContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"Context must be used within a Provider\");\r\n  }\r\n  return context;\r\n}\r\n","import React from \"react\";\r\nimport { Badge, Card } from \"react-bootstrap\";\r\nimport ProjectModel from \"../models/project\";\r\n\r\nconst ProjectCard = ({\r\n  name,\r\n  description,\r\n  clone_url,\r\n  image,\r\n  language,\r\n}: ProjectModel) => {\r\n  return (\r\n    <Card\r\n      className=\" h-100 \"\r\n      bg={\"dark\"}\r\n      style={{\r\n        width: \"18dp\",\r\n        height: \"60dp\",\r\n        paddingTop: \"30dp\",\r\n        color: \"white\",\r\n      }}\r\n    >\r\n      <Card.Header>\r\n        <Card.Title>{name}</Card.Title>\r\n      </Card.Header>\r\n\r\n      <Card.Body className=\"mb-0\">\r\n        <Card.Text>{description}</Card.Text>\r\n        <Card.Link href={clone_url}>\r\n          <Badge bg=\"dark\">GitHub</Badge>\r\n        </Card.Link>\r\n        <Badge bg=\"info\">{language}</Badge>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ProjectCard;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { AxiosError } from \"axios\";\r\nimport { useProjects } from \"../../store/subject-context\";\r\nimport { Container, Spinner } from \"react-bootstrap\";\r\nimport ProjectCard from \"../../components/ProjectCard\";\r\n\r\nconst ProjectList = (props: any) => {\r\n  //Paginator\r\n  // const [page, setPage] = useState(0)\r\n  // const [lastPage, setLastPage] = useState(0)\r\n  // const [size, setSize] = useState(8)\r\n\r\n  //Smackbar\r\n  // const classes = useStyles();\r\n  // const [open, setOpen] = React.useState(false as boolean);\r\n  // const [snackBarSeverity,setSnackBarSeverity] = useState(''as Color | undefined)\r\n  // const [snackBarMessage,setSnackBarBessage] = useState(''as string)\r\n\r\n  //Project Context\r\n  const { allProjects, isLoading, fetchProjects } = useProjects();\r\n\r\n  const [refresh, setRefresh] = useState(false as boolean);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      // console.log(isLoading);\r\n\r\n      await fetchProjects();\r\n      // console.log(isLoading);\r\n      // console.log(\"AAAA\", allProjects);\r\n      // console.log(allProjects);\r\n\r\n      setRefresh(false);\r\n    })();\r\n  }, [refresh]);\r\n\r\n  return (\r\n    <Container className=\"mt-5 \">\r\n      {isLoading ? (\r\n        <div className=\"text-center align-top\">\r\n          <Spinner animation=\"border\" role=\"status\">\r\n            <span className=\"visually-hidden\">Loading...</span>\r\n          </Spinner>\r\n        </div>\r\n      ) : (\r\n        <div className=\"row\">\r\n          {allProjects &&\r\n            allProjects.length > 0 &&\r\n            allProjects.map((proj) => {\r\n              return (\r\n                <div className=\"col-sm-4 mb-2 mt-2\" key={proj.id}>\r\n                  <ProjectCard\r\n                    id={proj.id}\r\n                    name={proj.name}\r\n                    description={proj.description}\r\n                    clone_url={proj.clone_url}\r\n                    image=\"asd\"\r\n                    language={proj.language}\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n","import React from \"react\";\r\nimport { Container, Navbar } from \"react-bootstrap\";\r\nimport NavBar from \"../../components/NavBar\";\r\nimport ProjectCard from \"../../components/ProjectCard\";\r\nimport {\r\n  ProjectContextProvider,\r\n  useProjects,\r\n} from \"../../store/subject-context\";\r\nimport ProjectList from \"./ProjectsList\";\r\n\r\nconst Projects = () => {\r\n  return (\r\n    <ProjectContextProvider>\r\n      <Navbar bg=\"info\" variant=\"dark\" className=\"w-100\">\r\n        <Container>Filter</Container>\r\n      </Navbar>\r\n      <ProjectList />\r\n    </ProjectContextProvider>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","import React from \"react\";\r\n\r\nconst Skills = () => {\r\n  return <div>My Skills</div>;\r\n};\r\n\r\nexport default Skills;\r\n","import React from \"react\";\r\n\r\nconst Welcome = () => {\r\n  return <div>Welcome</div>;\r\n};\r\n\r\nexport default Welcome;\r\n","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { HashRouter as Router, Route, Routes } from \"react-router-dom\";\r\n\r\nimport \"./App.css\";\r\nimport Footer from \"./components/Footer\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport About from \"./pages/About\";\r\nimport Projects from \"./pages/Projects/Projects\";\r\nimport Skills from \"./pages/Skills\";\r\nimport Welcome from \"./pages/Welcome\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <NavBar />\r\n      <Container>\r\n        <Routes>\r\n          <Route path=\"/*\" element={<Welcome />} />\r\n          <Route path=\"/about\" element={<About />} />\r\n          <Route path=\"/projects\" element={<Projects />} />\r\n          <Route path=\"/skills\" element={<Skills />} />\r\n        </Routes>\r\n      </Container>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}